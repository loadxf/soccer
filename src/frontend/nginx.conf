server {
    listen 80;
    
    # Document root where nginx serves files from
    root /usr/share/nginx/html;
    
    # Compression for better performance
    gzip on;
    gzip_comp_level 6;
    gzip_min_length 256;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript application/vnd.ms-fontobject application/x-font-ttf font/opentype image/svg+xml image/x-icon;
    
    location / {
        # First attempt to serve request as file, then as directory, 
        # then fall back to redirecting to index.html
        try_files $uri $uri/ /index.html;
        
        # Cache control for static assets
        add_header Cache-Control "public, max-age=3600";
    }

    # Don't cache index.html to ensure the latest version is served
    location = /index.html {
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        expires 0;
    }
    
    # Service worker requires special cache control
    location = /serviceWorker.js {
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        expires 0;
    }

    # Static file caching for improved performance
    location ~* \.(?:jpg|jpeg|gif|png|ico|svg|woff|woff2|ttf|css|js|json)$ {
        expires 30d;
        add_header Cache-Control "public, max-age=2592000";
        access_log off;
    }
    
    # Proxy API requests to the API container
    location /api/ {
        proxy_pass http://app:8000/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
    
    # Proxy health check requests to the API container
    location /health {
        proxy_pass http://app:8000/health;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
} 