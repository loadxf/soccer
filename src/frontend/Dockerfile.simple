# Single-stage build for simplicity
FROM nginx:alpine

# Install node and npm for building the app
RUN apk add --update nodejs npm

# Set working directory
WORKDIR /app

# Copy package files first for better layer caching
COPY package.json package-lock.json* ./

# Install dependencies
RUN npm install

# Copy application files
COPY . .

# Set environment variables
ENV REACT_APP_ENVIRONMENT=docker
# Use host-based API URL instead of container name
ENV REACT_APP_API_URL=''
ENV REACT_APP_ENABLE_SERVICE_WORKER=true
ENV NODE_ENV=production
ENV CI=false

# Build the application (CI=false prevents treating warnings as errors)
RUN npm run lint -- --max-warnings=0 && npm run build

# Copy custom nginx config
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Copy built files to nginx html directory
RUN cp -r build/* /usr/share/nginx/html/

# Add health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 CMD wget -q --spider http://localhost:80

# Expose port 80
EXPOSE 80

# Container runs nginx in foreground
CMD ["nginx", "-g", "daemon off;"] 