global:
  resolve_timeout: 5m
  smtp_smarthost: 'smtp.example.com:587'
  smtp_from: 'alertmanager@example.com'
  smtp_auth_username: 'alertmanager'
  smtp_auth_password: 'password'
  # Comment out the slack webhook URL until you have a valid one
  slack_api_url: 'https://hooks.slack.com/services/dummy/dummy/dummy'
  pagerduty_url: 'https://events.pagerduty.com/v2/enqueue'

templates:
  - '/etc/alertmanager/template/*.tmpl'

route:
  group_by: ['alertname']
  group_wait: 30s
  group_interval: 5m
  repeat_interval: 1h
  receiver: 'web.hook'

inhibit_rules:
  - source_match:
      severity: 'critical'
    target_match:
      severity: 'warning'
    equal: ['alertname', 'cluster', 'service']

receivers:
  - name: 'web.hook'
    webhook_configs:
    - url: 'http://127.0.0.1:5001/'

  - name: 'team-soccer-prediction'
    email_configs:
    - to: 'team@example.com'
      send_resolved: true
    slack_configs:
    - channel: '#soccer-prediction-alerts'
      send_resolved: true

  - name: 'slack-alerts'
    slack_configs:
    - channel: '#soccer-prediction-alerts'
      send_resolved: true
      title: '{{ template "slack.default.title" . }}'
      text: '{{ template "slack.default.text" . }}'

  - name: 'pagerduty-critical'
    pagerduty_configs:
    - service_key: 'dummy_key_for_development'  # Replace with actual key in production
      send_resolved: true 